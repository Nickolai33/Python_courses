1. Коллекция в Python — программный объект (переменная-контейнер), хранящая набор значений одного или различных типов, позволяющий обращаться к этим значениям, а также применять специальные функции и методы, зависящие от типа коллекции.

2. Стандартные встроенные коллекционные типы данных в Python: список (list), кортеж (tuple), строку (string), множества (set, frozenset), словарь (dict). 

3. Списки в Python - упорядоченные изменяемые коллекции объектов произвольных типов (почти как массив, но типы могут отличаться).

4.Объявление списка – самый первый и главный этап его создания. Для объявления списка в Python существует несколько способов.
 list = []
5.Вариант №1: Через литерал (выражение, создающее объект):
  list = [1,2,4,5]
  Вариант №2: Через функцию list():
  elements = list()

6.Некоторые операции, имеют два варианта выбора элемента: либо выбор непосредственно его по имени, либо обращение по индексу. Индексом называют его порядковый номер, начиная с нуля.

7.да

8.list.insert(i, x) , где list – список, i – позиция, x – нужное значение.

9. + extend

10.	elements.copy() – встроенный метод copy (доступен с Python 3.3);
	list(elements) – через встроенную функцию list() ;
	copy.copy(elements) – функция copy() из пакета copy;
	elements[:] – через создание среза (устаревший синтаксис);
copy.copy(a) делает поверхностное копирование. 
Объекты внутри списка будут скопированы как ссылки на них (как в случае с оператором = ).
Если необходимо рекурсивно копировать всех элементов в списке, используйте copy.deepcopy(a)

11.да

